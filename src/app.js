webpackJsonp([0],{

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(1);\nvar ReactDOM = __webpack_require__(34);\n\nvar App = __webpack_require__(172);\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmpzPzdhYzkiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwiUmVhY3RET00iLCJBcHAiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsUUFBUSxtQkFBQUMsQ0FBUSxDQUFSLENBQVo7QUFDQSxJQUFJQyxXQUFXLG1CQUFBRCxDQUFRLEVBQVIsQ0FBZjs7QUFFQSxJQUFJRSxNQUFNLG1CQUFBRixDQUFRLEdBQVIsQ0FBVjs7QUFFQUMsU0FBU0UsTUFBVCxDQUFnQkosTUFBTUssYUFBTixDQUFvQkYsR0FBcEIsRUFBeUIsSUFBekIsQ0FBaEIsRUFBZ0RHLFNBQVNDLGNBQVQsQ0FBd0IsTUFBeEIsQ0FBaEQiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBSZWFjdERPTSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xuXG52YXIgQXBwID0gcmVxdWlyZSgnLi9jb21wb25lbnRzL2FwcCcpO1xuXG5SZWFjdERPTS5yZW5kZXIoUmVhY3QuY3JlYXRlRWxlbWVudChBcHAsIG51bGwpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBwLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 172:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = __webpack_require__(1);\n\nvar _require = __webpack_require__(173),\n    StyleSheet = _require.StyleSheet;\n\nvar _require2 = __webpack_require__(194),\n    View = _require2.View;\n\nvar _require3 = __webpack_require__(202),\n    components = _require3.components,\n    consts = _require3.consts;\n\nvar Keypad = components.Keypad,\n    KeypadInput = components.KeypadInput;\n\nvar App = function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, App);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n            keypadElement: null,\n            value: \"\",\n            keypadType: consts.KeypadTypes.EXPRESSION\n        }, _this.handleChange = function (e) {\n            _this.state.keypadElement.configure({\n                keypadType: e.target.value,\n                extraKeys: [\"x\", \"y\", \"PI\", \"THETA\"]\n            });\n            _this.setState({ keypadType: e.target.value });\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(App, [{\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            return React.createElement(View, null, React.createElement(View, { style: styles.container }, React.createElement(KeypadInput, {\n                value: this.state.value,\n                keypadElement: this.state.keypadElement,\n                onChange: function onChange(value, cb) {\n                    return _this2.setState({ value: value }, cb);\n                },\n                onFocus: function onFocus() {\n                    return _this2.state.keypadElement.activate();\n                },\n                onBlur: function onBlur() {\n                    return _this2.state.keypadElement.dismiss();\n                }\n            }), React.createElement(View, { style: styles.selectContainer }, 'Keypad type:', React.createElement('select', {\n                onChange: this.handleChange,\n                value: this.state.keypadType\n            }, React.createElement('option', { value: consts.KeypadTypes.FRACTION }, 'FRACTION'), React.createElement('option', { value: consts.KeypadTypes.EXPRESSION }, 'EXPRESSION')))), React.createElement(Keypad, {\n                onElementMounted: function onElementMounted(node) {\n                    if (node && !_this2.state.keypadElement) {\n                        _this2.setState({ keypadElement: node });\n                    }\n                }\n            }));\n        }\n    }]);\n\n    return App;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n    container: {\n        marginTop: 10,\n        marginLeft: 20,\n        marginRight: 20,\n        marginBottom: 40\n    },\n    selectContainer: {\n        marginTop: 16,\n        flexDirection: \"row\"\n    }\n});\n\nmodule.exports = App;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

});